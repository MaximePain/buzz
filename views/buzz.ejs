<!DOCTYPE html>
<html lang="fr">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta http-equiv="X-UA-Compatible" content="ie=edge">
	<title>Buzz</title>
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
		integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
</head>

<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
	integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
	crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
	integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
	crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
	integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
	crossorigin="anonymous"></script>

<body>
	<div style="margin-left: 20px">
		<div id="controlPanelAdmin" style="display: none">
			<button id="buttonStart">Start</button>
			<button id="buttonReset">Reset</button>
			<label>Temps: </label><input id="tempsReset" type="text" value="10">
			<br>
			<label>Temps restant: </label><input id="tempsInput" value="10">
			<br><br>
			<table style="border: 1px solid black; width: 200px">
				<tbody id="playersTable">

				</tbody>
			</table>
		</div>

		<div id="containerPasAdmin" style="display: none">
			<button class="btn btn-secondary" type="button" style="width: 300px; height:300px" id="buttonBuzz"
				disabled>BUZZ</button>
			<label>Temps restant: </label><input id="tempsInputC" value="" readonly>
		</div>
	</div>
	<input type="hidden" id="inputAdmin" value="<%- admin %>">
</body>

<script>
	var admin;
	var idRoom = sessionStorage.getItem('idRoom');
	var playerId = sessionStorage.getItem('playerId');
	window.addEventListener('load', () => {
		var ws = new WebSocket("ws://127.0.0.1:5000");

		var interval = undefined;

		var buttonBuzz = document.getElementById("buttonBuzz");
		var tempsInput = document.getElementById('tempsInput');
		var tempsInputC = document.getElementById('tempsInputC'); //client pas admin

		admin = document.getElementById("inputAdmin").value == 'true';

		ws.onmessage = (raw) => {
			let data = JSON.parse(raw.data);
			switch (data.type) {
				case 'start':
					buttonBuzz.removeAttribute('disabled');
					tempsInput.value = data.temps;
					clearInterval(interval);
					interval = setInterval(() => {
						if (tempsInput.value > 0)
							tempsInput.value--;
						else
							clearInterval(interval);
						tempsInputC.value = tempsInput.value;
					}, 1000);
					break;
				case 'stop':
					tempsInput.value = data.temps;
					tempsInputC.value = tempsInput.value;
					clearInterval(interval);
					buttonBuzz.setAttribute('disabled', '');
					break;
			}
			if (admin) {
				switch (data.type) {
					case 'getPlayersAll':
						let players = data.players;
						updatePlayers(players);
						break;
					case 'buzz':
						let msg = {
							type: 'getPlayersAll',
							idRoom: idRoom,
							playerId: playerId
						}
						ws.send(JSON.stringify(msg));
						break;
				}
			}
		}

		ws.onopen = () => {
			let msg = {
				type: "joined",
				idRoom: idRoom,
				playerId: playerId
			}
			ws.send(JSON.stringify(msg));
		}

		if (admin) {

			var start = false;

			var tempsReset = document.getElementById('tempsReset');

			var controlPanelAdmin = document.getElementById("controlPanelAdmin");
			controlPanelAdmin.style.display = 'block';
			var buttonStart = document.getElementById('buttonStart');
			var buttonReset = document.getElementById('buttonReset');

			buttonStart.onclick = () => {
				start = !start;
				if (start)
					buttonStart.textContent = 'Pause';
				else
					buttonStart.textContent = "Start";

				if (start) {
					let msg = {
						type: 'start',
						idRoom: idRoom,
						playerId: playerId,
						temps: tempsInput.value
					}
					ws.send(JSON.stringify(msg));
				}
				else {
					let msg = {
						type: 'stop',
						idRoom: idRoom,
						playerId: playerId
					}
					ws.send(JSON.stringify(msg));
				}
			}

			buttonReset.onclick = () => {
				let table = document.getElementById("playersTable");
				table.innerHTML = '';
				start = false;
				buttonStart.textContent = "Start";
				let msg = {
					type: 'reset',
					idRoom: idRoom,
					playerId: playerId,
					temps: tempsReset.value
				}
				ws.send(JSON.stringify(msg));
			};

			function updatePlayers(players) {
				let table = document.getElementById("playersTable");
				table.innerHTML = '';
				for (let playerId in players) {
					let player = players[playerId];
					if (player.role == 'player') {
						let score = player.score;
						if (score != -1) {
							table.innerHTML += '<tr> <td class="text-center" style="border: 1px solid black"> ' + player.pseudo + '</td ><td class="text-center" style="border: 1px solid black">' + player.score + '</td><td class="text-center" style="border: 1px solid black">' + player.point + '</td><td class="text-center" style="border: 1px solid black"><button type="button">+</button><button type="button">-</button></td></tr>';
						}
					}
				}
				sortTable("playersTable");
			}

			//debug
			/*setInterval(() => {
				let msg = {
					type: 'getPlayersAll',
					idRoom: idRoom,
					playerId: playerId
				}
				ws.send(JSON.stringify(msg));
			}, 2000);*/
		}
		else {
			var containerPasAdmin = document.getElementById("containerPasAdmin");
			containerPasAdmin.style.display = 'block';

			buttonBuzz.onclick = () => {
				buttonBuzz.setAttribute('disabled', '');
				let msg = {
					type: 'buzz',
					idRoom: idRoom,
					playerId: playerId
				}
				ws.send(JSON.stringify(msg));
			}
		}


		function sortTable(id) {
			let table, rows, switching, i, x, y, shouldSwitch;
			table = document.getElementById(id);
			switching = true;
			while (switching) {
				switching = false;
				rows = table.rows;
				for (i = 0; i < (rows.length - 1); i++) {
					shouldSwitch = false;
					x = rows[i].getElementsByTagName("TD")[1];
					y = rows[i + 1].getElementsByTagName("TD")[1];
					if (x != undefined && y != undefined)
						if (Number(x.innerHTML) > Number(y.innerHTML)) {
							shouldSwitch = true;
							break;
						}
				}
				if (shouldSwitch) {
					rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
					switching = true;
				}
			}
		}


	});
</script>

</html>